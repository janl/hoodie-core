argv = ['/usr/local/bin/node-waf', 'configure', 'build']
blddir = '/Users/jan/Work/hoodie/hoodie/node_modules/daemon/build'
commands = {'dist': 0, 'configure': True, 'distcheck': 0, 'install': 0, 'build': True, 'clean': 0, 'distclean': 0, 'check': 0, 'uninstall': 0}
cwd = '/Users/jan/Work/hoodie/hoodie/node_modules/daemon'
environ = {'npm_package_author_url': 'Slashed', 'npm_config_engine_strict': '', 'npm_config_searchopts': '', 'npm_config_save_bundle': '', 'npm_package_contributors_3_name': 'Zak Taylor', 'npm_package_dist_shasum': 'cdac9ace0ee11c90196777814c6aca2b3233f63e', 'npm_config_group': '20', 'npm_config_browser': 'open', 'npm_config_global': '', 'npm_config_color': 'true', 'npm_package_contributors_5_email': 'charlie@charlieistheman.com', 'SHELL': '/bin/bash', 'SECURITYSESSIONID': '18b12', 'npm_config_pre': '', 'npm_config_tmp': '/var/folders/nb/g8p41mws6znd_gmy0wk8btz40000gn/T', 'npm_package_engines_node': '>= 0.4.0', 'npm_config_argv': '{"remain":["daemon","cli"],"cooked":["install","daemon","cli"],"original":["install","daemon","cli"]}', 'npm_config_cache_lock_wait': '10000', 'npm_package_contributors_6_email': 'josh@nodejitsu.com', 'npm_package_scripts_preinstall': 'bash ./install', 'LC_CTYPE': 'UTF-8', 'npm_config_save_dev': '', 'npm_config_init_version': '0.0.0', 'npm_config_user_agent': 'npm/1.1.41 node/v0.8.3', 'npm_lifecycle_event': 'preinstall', 'npm_config_init_author_name': '', 'npm_config_yes': '', 'npm_config_usage': '', 'npm_package_description': 'Add-on for creating *nix daemons', 'npm_config_shell': '/bin/bash', 'npm_config_ignore': '', 'npm_config_ca': '"-----BEGIN CERTIFICATE-----\\nMIIChzCCAfACCQDauvz/KHp8ejANBgkqhkiG9w0BAQUFADCBhzELMAkGA1UEBhMC\\nVVMxCzAJBgNVBAgTAkNBMRAwDgYDVQQHEwdPYWtsYW5kMQwwCgYDVQQKEwNucG0x\\nIjAgBgNVBAsTGW5wbSBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkxDjAMBgNVBAMTBW5w\\nbUNBMRcwFQYJKoZIhvcNAQkBFghpQGl6cy5tZTAeFw0xMTA5MDUwMTQ3MTdaFw0y\\nMTA5MDIwMTQ3MTdaMIGHMQswCQYDVQQGEwJVUzELMAkGA1UECBMCQ0ExEDAOBgNV\\nBAcTB09ha2xhbmQxDDAKBgNVBAoTA25wbTEiMCAGA1UECxMZbnBtIENlcnRpZmlj\\nYXRlIEF1dGhvcml0eTEOMAwGA1UEAxMFbnBtQ0ExFzAVBgkqhkiG9w0BCQEWCGlA\\naXpzLm1lMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDLI4tIqPpRW+ACw9GE\\nOgBlJZwK5f8nnKCLK629Pv5yJpQKs3DENExAyOgDcyaF0HD0zk8zTp+ZsLaNdKOz\\nGn2U181KGprGKAXP6DU6ByOJDWmTlY6+Ad1laYT0m64fERSpHw/hjD3D+iX4aMOl\\ny0HdbT5m1ZGh6SJz3ZqxavhHLQIDAQABMA0GCSqGSIb3DQEBBQUAA4GBAC4ySDbC\\nl7W1WpLmtLGEQ/yuMLUf6Jy/vr+CRp4h+UzL+IQpCv8FfxsYE7dhf/bmWTEupBkv\\nyNL18lipt2jSvR3v6oAHAReotvdjqhxddpe5Holns6EQd1/xEZ7sB1YhQKJtvUrl\\nZNufy1Jf1r0ldEGeA+0ISck7s+xSh9rQD2Op\\n-----END CERTIFICATE-----"', 'npm_config_globalconfig': '/usr/local/etc/npmrc', 'npm_package_contributors_2_email': 'mail@substack.net', 'VERSIONER_PYTHON_PREFER_32_BIT': 'no', 'npm_config_parseable': '', 'npm_package_contributors_1_email': 'charlie.robbins@gmail.com', 'npm_config_userignorefile': '/Users/jan/.npmignore', 'USER': 'jan', 'npm_package_author_name': 'Arthur', 'npm_config_versions': '', 'SHLVL': '3', 'npm_config_cache_lock_stale': '60000', 'npm_config_init_author_url': '', 'npm_config_fetch_retry_maxtimeout': '60000', 'npm_config_unsafe_perm': 'true', 'npm_config_cache': '/Users/jan/.npm', 'EDITOR': 'emacs', 'npm_config_email': 'jan@apache.org', 'npm_config_save_optional': '', 'TERM_SESSION_ID': 'E2800889-8585-4375-ACA8-159107F027DD', 'npm_config_proxy': '', 'npm_config_depth': 'null', 'npm_config_umask': '022', 'npm_package_contributors_4_name': 'Daniel Bartlett', 'npm_config_json': '', 'npm_package_contributors_0_name': 'Pedro Teixeira', 'npm_config_editor': 'emacs', 'npm_config_prefix': '/usr/local', 'npm_package_repository_type': 'git', 'npm_package_contributors_1_name': 'Charlie Robbins', 'npm_config_npat': '', 'npm_config_init_module': '/Users/jan/.npm-init.js', 'npm_config_fetch_retry_factor': '10', 'npm_config_long': '', 'npm_config_searchsort': 'name', 'npm_package_author_email': 'arthur@norgic.com', 'npm_lifecycle_script': 'bash ./install', 'COMMAND_MODE': 'unix2003', 'npm_config_git': 'git', 'npm_package_readme': '"# daemon.node\\n\\nA C++ add-on for Node.js to enable simple daemons in Javascript plus some useful wrappers in Javascript.\\n\\n## Installation\\n\\n### Installing daemon.node with npm\\n```\\n  [sudo] npm install daemon\\n```\\n\\n### Installing daemon.node locally \\n```\\n  node-waf configure build  \\n```\\n\\n## Usage\\n\\n### Caveats Regarding Forking Safety\\n\\nAs of v0.6, node.js has not been fork-safe. What this means for you is that **all daemonization should happen on the first tick and not as part of an asynchronous action**. The easiest way to ensure this is to daemonize your process very early in the script, near the \\"require\\" block.\\n\\n`daemon.kill`, however, is still asynchronous.\\n\\n### Starting a daemon:\\nStarting a daemon is easy, just call daemon.start() and daemon.lock().\\n\\n``` js\\nvar daemon = require(\'daemon\'),\\n    pid;\\n\\npid = daemon.start(\'stdout.log\', \'stderr.log\');\\ndaemon.lock(\'/tmp/yourprogram.pid\');\\n```\\n\\n`daemon.start` daemonizes your script\'s process and redirects stdio to the specified files. `daemon.lock` places a lockfile on your daemon.\\n\\nThis library also exposes a higher level facility through javascript for starting daemons:\\n\\n``` js\\n  var daemon = require(\'daemon\'),\\n      pid;\\n  \\n  pid = daemon.daemonize({ stdout: \'somefile.log\', stderr: \'error.log\' }, \'/tmp/yourprogram.pid\');\\n  console.log(\'Daemon started successfully with pid: \' + pid);\\n```\\n\\nIf you wish you can also simply pass a single pass which you wish to be used for both `stdout` and `stderr`:\\n\\n``` js\\n  var daemon = require(\'daemon\'),\\n      pid;\\n  \\n  pid = daemon.daemonize(\'stdout-and-stderr.log\', \'/tmp/yourprogram.pid\');\\n  console.log(\'Daemon started successfully with pid: \' + pid);\\n```\\n\\n### Methods\\n\\n#### daemon.start(stdout[, stderr])\\n  Takes two filenames, one for `stdout` and one for `stderr`. If only `stdout` is supplied, `stderr` will use the same filename. If no arguments are passed, `stdout` and `stderr` output will be sent to `/dev/null`. Returns the process pid.\\n#### daemon.lock(\'/tmp/lockfile.pid\')\\n  Try to lock the file. If it\'s unable to OPEN the file it will exit. If it\'s unable to get a LOCK on the file it will return false. Else it will return true.\\n#### daemon.daemonize({ stdout: \'stdout.log\', stderr: \'stderr.log\' }, \'/tmp/lockfile.pid\', [cb])\\n  A convenience wrapper around `daemon.start` and `daemon.lock`. Returns pid, optionally calls `cb(err, pid)` for error handling and backwards compatibility. *This method is still synchronous*.\\n#### daemon.kill(lockfile, cb)\\n  Kills the process specified in the lockfile and cleans the file. Unlike every other method in this library, this one is asynchronous.\\n#### daemon.closeStdin()\\n  Closes stdin and reopens fd as /dev/null.\\n#### daemon.closeStdout()\\n  Closes stdout and reopens fd as /dev/null.\\n#### daemon.closeStderr()\\n  Closes stderr and reopens fd as /dev/null.\\n#### daemon.closeStdio()\\n  Closes std[in|out|err] and reopens fd as /dev/null.\\n#### daemon.chroot(\'/path_to_chroot_to\')\\n  Attempts to chroot the process, returns exception on error, returns true on success.\\n#### daemon.setreuid(1000)\\n  Change the effective user of the process. Can take either an integer (UID) or a string (Username). Returns exceptions on error and true on success.\\n\\n### The Fine Print\\n\\nThis library is available under the MIT LICENSE. See the LICENSE file for more details. It was originally created by [Slashed][2] and has been forked/improved/hacked upon by a lot of good people. Special thanks to [Isaacs][5] for npm and a great example in [glob][6].\\n\\n#### Author: [Slashed](http://github.com/slashed)\\n#### Contributors: [Charlie Robbins](http://nodejitsu.com), [Pedro Teixeira](https://github.com/pgte), [James Halliday](https://github.com/substack), [Zak Taylor](https://github.com/dobl), [Daniel Bartlett](https://github.com/danbuk), [Charlie McConnell](https://github.com/AvianFlu)\\n\\n[0]: http://slashed.posterous.com/writing-daemons-in-javascript-with-nodejs-0\\n[1]: https://github.com/pgte/fugue/blob/master/deps/daemon.cc\\n[2]: https://github.com/slashed/daemon.node\\n[3]: https://github.com/substack/daemon.node/\\n[4]: https://github.com/dobl/daemon.node\\n[5]: https://github.com/isaacs/npm\\n[6]: https://github.com/isaacs/node-glob\\n"', 'TERM_PROGRAM_VERSION': '309', 'COUCH': 'http://127.0.0.1:5984', 'npm_config_rollback': 'true', 'npm_package_repository_url': 'http://github.com/indexzero/daemon.node.git', 'HOME': '/Users/jan', 'TERM_PROGRAM': 'Apple_Terminal', 'Apple_PubSub_Socket_Render': '/tmp/launch-5TFP6U/Render', 'npm_config_save': '', 'npm_config_registry': 'https://registry.npmjs.org/', 'npm_config_unicode': 'true', 'npm_config_production': '', 'npm_config_message': '%s', 'npm_config_always_auth': '', 'TMPDIR': '/var/folders/nb/g8p41mws6znd_gmy0wk8btz40000gn/T/', 'npm_config_searchexclude': '', 'npm_config_loglevel': 'http', 'npm_config_cache_lock_retries': '10', 'npm_config_strict_ssl': 'true', 'npm_package_contributors_2_name': 'James Halliday', 'npm_package_main': './lib/daemon', 'npm_config_tag': 'latest', 'npm_config_globalignorefile': '/usr/local/etc/npmignore', '__CF_USER_TEXT_ENCODING': '0x1F5:0:2', 'npm_config_version': '', 'npm_package_contributors_0_email': 'pedro.teixeira@gmail.com', 'npm_config_force': '', 'LOGNAME': 'jan', 'npm_config_user': '501', '_': '/usr/local/bin/node-waf', 'npm_config_link': '', 'npm_package_name': 'daemon', 'npm_config_userconfig': '/Users/jan/.npmrc', 'npm_config_dev': '', 'npm_config_rebuild_bundle': 'true', 'npm_config_npaturl': 'http://npat.npmjs.org/', 'npm_config_username': 'jan', 'npm_package_contributors_6_name': 'Josh Holbrook', 'PATH': '/usr/local/lib/node_modules/npm/bin/node-gyp-bin:/Users/jan/Work/hoodie/hoodie/node_modules/daemon/node_modules/.bin:/Users/jan/Work/hoodie/hoodie/node_modules/.bin:/Users/jan/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin', 'npm_package_contributors_5_name': 'Charlie McConnell', 'npm_config_coverage': '', 'TERM': 'xterm-256color', 'npm_config_node_version': '0.8.3', 'npm_config_onload_script': '', 'VERSIONER_PYTHON_VERSION': '2.7', 'npm_config_description': 'true', 'npm_config_sign_git_tag': '', 'npm_config_fetch_retry_mintimeout': '10000', 'npm_config_viewer': 'man', 'npm_config_fetch_retries': '2', 'npm_config_cache_max': 'null', 'SSH_AUTH_SOCK': '/tmp/launch-WoAnr8/Listeners', 'npm_config_proprietary_attribs': 'true', 'npm_package_devDependencies_vows': '0.6.x', 'npm_package_contributors_4_email': 'dan@f-box.org', 'npm_package_version': '0.5.1', 'npm_config_https_proxy': '', 'ACOUCH': 'http://jan:pr1nc0@127.0.0.1:5984', 'npm_config_init_author_email': '', 'npm_package_contributors_3_email': 'zak@dobl.com', 'npm_config_outfd': '1', 'Apple_Ubiquity_Message': '/tmp/launch-NHwi46/Apple_Ubiquity_Message', 'PWD': '/Users/jan/Work/hoodie/hoodie/node_modules/daemon', 'npm_config_cache_min': ''}
files = []
hash = 0
options = {'compile_targets': None, 'force': False, 'verbose': 0, 'nocache': False, 'progress_bar': 0, 'destdir': '', 'keep': False, 'zones': '', 'blddir': '', 'prefix': '/usr/local/', 'jobs': 4, 'srcdir': '', 'check_cxx_compiler': 'g++'}
srcdir = '/Users/jan/Work/hoodie/hoodie/node_modules/daemon'
