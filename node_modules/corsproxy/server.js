var log = require("../../lib/util").log;

// Generated by CoffeeScript 1.3.3
var http, httpProxy, port, proxyServer;

http = require('http');

httpProxy = require('http-proxy');

proxyServer = function(req, res, proxy) {
try {
  var cors_headers, header, headers, host, hostname, ignore, key, path, port, value, _i, _len, _ref, _ref1, _ref2;
  if (!req.headers.origin) {
    log('req.headers.origin not given');
    res.write('hello https\n');
    res.end();
    return;
  }
  if (req.headers['access-control-request-headers']) {
    headers = req.headers['access-control-request-headers'];
  } else {
    headers = 'accept, accept-charset, accept-encoding, accept-language, authorization, content-length, content-type, host, origin, proxy-connection, referer, user-agent, x-requested-with';
    _ref = req.headers;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      header = _ref[_i];
      if (req.indexOf('x-') === 0) {
        headers += ", " + header;
      }
    }
  }
  cors_headers = {
    'access-control-allow-methods': 'HEAD, POST, GET, PUT, PATCH, DELETE',
    'access-control-max-age': '86400',
    'access-control-allow-headers': headers,
    'access-control-allow-credentials': 'true',
    'access-control-allow-origin': req.headers.origin
  };
  if (req.method === 'OPTIONS') {
    console.log('responding to OPTIONS request');
    res.writeHead(200, cors_headers);
    res.end();
  } else {
    _ref1 = req.url.match(/\/([^\/]+)(.*)/), ignore = _ref1[0], hostname = _ref1[1], path = _ref1[2];
    _ref2 = hostname.split(/:/), host = _ref2[0], port = _ref2[1];
    console.log("proxying to " + hostname + path);
    for (key in cors_headers) {
      value = cors_headers[key];
      res.setHeader(key, value);
    }
    req.url = path;
    return proxy.proxyRequest(req, res, {
      host: host,
      port: port
    });
  }
} catch(e) {
  log(e);
}
};

port = process.env.PORT || process.argv[2] || 9292;

httpProxy.createServer(proxyServer).listen(port);

log("CORS Proxy started on localhost:" + port);
