#!/usr/bin/env node
var fs = require("fs");
var cli = require("cli");
var util = require("util");

require("shelljs/global"); // GIMMEH!

var HoodieApp = require("./lib/app.js");
var Config = require("./lib/config.js");
var hoodie = require("./lib/hoodie.js");

var commands = {};
commands["usage"] = function usage(args)
{
    if(args && args[0] && args[0] !== "usage") {
        console.log("Unknown command '%s'\n", cmd);
    }
    console.log("Usage: hoodie cmd");
    console.log("cmd is one of:");
    console.log("  setup  This needs to be run once, before everything else");
    console.log("");
    console.log("  new name     Creates new Hoodie app in `./name`");
    console.log("  delete name  Deletes app `name`");
    console.log("  start        Starts the Hoodie app in ./");
    console.log("  start name   Starts the Hoodie app `name`");
    console.log("  open name    Opens app `name` in your browser");
    console.log("  open         Opens the app in ./ in your browser");
    console.log("");
    console.log("  apps         Shows a list of all installed apps");
    console.log("");
    console.log("  service start    Starts the Hoodie service");
    console.log("  service restart  Restarts the Hoodie service");
    console.log("  service stop     Stops the Hoodie service");
    console.log("");
    console.log("  worker install name        Create new worker `name`");
    console.log("  worker uninstall name     Delete worker `name`");
    console.log("");
    console.log("  usage  Prints this screen");
};

commands["setup"] = function setup()
{
    hoodie.setup();
};

// hoodie service

commands["service-start"] = function service_start()
{
    console.log("Starting Hoodie");
    hoodie.service_start();
};

commands["service-restart"] = function service_restart()
{
    console.log("Restarting Hoodie");
    hoodie.service_restart();
};

commands["service-stop"] = function service_stop()
{
    console.log("Stopping Hoodie");
    hoodie.service_stop();
};

// Create a new app

commands["new"] = function hoodie_new(args)
{
    if(!args[0]) {
        console.log("Missing appname: hoodie new appname");
        return;
    }
    var name = args[0];

    console.log("Creating new Hoodie app '" + name + "'");
    hoodie.new_app(name);
};

commands["delete"] = function _delete(args)
{
    var name = app_name_from_args(args); // TODO: handle nonexist
    var app = new HoodieApp(name);
    hoodie.delete_app(app);
};

commands["status"] = function status(args)
{
    var app_name = app_name_from_args(args);
    var app = new HoodieApp(app_name);
    console.log("%j", app.status());
}

// start an app
// in ./ of app: hoodie start
// anywhere: hoodie start app
//   looks up 'app' in ~/.hoodie.json
commands["start"] = function start(args)
{
    commands["service-start"]();
    var app_name = app_name_from_args(args);
    var app = new HoodieApp(app_name);
    app.start();
};

// stop an app
// in ./ of app: hoodie stop
// anywhere: hoodie stop app
//   looks up 'app' in ~/.hoodie.json
commands["stop"] = function stop(args)
{
    var app_name = app_name_from_args(args);
    var app = new HoodieApp(app_name);
    app.stop();
};

// list all apps
commands["apps"] = function apps()
{
    var config = new Config();
    var apps = config.get_apps();
    console.log("");
    for(var name in apps) {
        var app = apps[name];
        console.log("%s:", name);
        console.log("  url: http://%s.hoodie.dev", name);
        console.log("  path: %s", app.path);
        console.log("");
    }
};

// open an app
commands["open"] = function open(args)
{
  var name = app_name_from_args(args);
  var app = new HoodieApp(name);
  if(!app.is_running()) {
    console.log("'%s' is not runnning. Use 'hoodie start %s' to start it", name, name);
    return;
  }
  exec(util.format("open http://%s.hoodie.dev", name));
};

// util

var app_name_from_args = function app_name_from_args(args)
{
    var app_name;
    if(args.length == 0) {
        // read "app" from CWD/package.json:name when type: "hoodie-app"
        app_name = JSON.parse(fs.readFileSync("package.json")).name;
    } else {
        // args[0] is name
        app_name = args[0];
    }
    return app_name;
};

// main

cli.main(function(args, options) {
    // has run setup?
    var config = new Config();
    var cmd = args[0] || "usage";
    if(!commands[cmd]) {
        commands.usage(["usage"]);
        return;
    }

    // we need to run setup at least once
    if(!config.get("setup") && cmd != "setup") {
        console.log("To use hoodie, you need to run:");
        console.log("  sudo hoodie setup");
        console.log("at least once. Thanks! :)");
        return;
    }

    commands[cmd](args.slice(1));
});
